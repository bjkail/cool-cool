#!/bin/bash

set -e

test=$1
dir=$(dirname "$0")

run_tests() {
  stage=$1
  shift

  cd "$dir/$stage"
  for file in *.cl; do
    if test -z "$test" -o "$test.cl" = "$stage/$file"; then
      optslist=()
      while IFS= read -r opts; do
        optslist+=("$opts")
      done < <(sed -ne 's/^--test=//p' "$file")

      if ((${#optslist[@]} == 0)); then
        optslist=('')
      fi

      for mode in '' uva; do
        expectedfile="${file%.cl}${mode:+.$mode}.txt"

        if test -f "$expectedfile"; then
          expected=$(cat "$expectedfile")

          for opts in "${optslist[@]}"; do
            args=()

            if test $stage != interpret; then
              args+=(--$stage)
            fi

            if test -n "$mode"; then
              args+=(--$mode)
            fi

            args+=($opts "$file")

            redir=${file%.cl}.in
            if test -f "$redir"; then
              echo -n "cool" "${args[@]}" "< $redir: "
              actual=$(../../bin/cool "${args[@]}" < "$redir")
            else
              echo -n "cool" "${args[@]}: "
              actual=$(../../bin/cool "${args[@]}")
            fi

            if test "$OSTYPE" = "cygwin"; then
              actual=$(echo "$actual" | tr -d '\r')
            fi

            if test "$actual" != "$expected"; then
              echo "TEST FAILED" >&2
              echo "-- ACTUAL:" >&2
              echo "$actual" | cat -v >&2
              echo "-- EXPECTED:" >&2
              echo "$expected" | cat -v >&2
              exit 1
            else
              echo "TEST PASSED"
            fi
          done
        fi
      done
    fi
  done
}

for i in lex parse analyze interpret; do
  (run_tests $i)
done
