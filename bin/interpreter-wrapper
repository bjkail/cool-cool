#!/bin/bash
# Wrapper around Cool Interpreter to support multiple input files.  Set the
# COOL_INTERPRETER environment variable to the path of the Cool Interpreter.

if test "${COOL_INTERPRETER+x}" != x; then
  echo "$0: COOL_INTERPRETER is unset" >&2
  exit 1
fi

set -o pipefail

formaterrors=false

cmd=("$COOL_INTERPRETER")
files=()
while test $# -ne 0; do
  case $1 in
  --) shift; files+=("$@"); break;;
  --format-errors) formaterrors=true;;
  -*) cmd+=("$1");;
  *) files+=("$1")
  esac
  shift
done

if ((${#files[@]} != 0)); then
  tmpfile=$(mktemp --tmpdir XXXXXXXXXX.cl)
  trap 'rm "$tmpfile"' EXIT

  filenumlines=()
  for file in "${files[@]}"; do
    filenumlines[$((i++))]=$(cat < "$file" | tee -a "$tmpfile" | wc -l) || exit 1
  done

  if test "$OSTYPE" = cygwin; then
    cmd+=("$(cygpath -m "$tmpfile")")
  else
    cmd+=("$tmpfile")
  fi
fi

if $formaterrors; then
  "${cmd[@]}" | while IFS= read -r line; do
    if [[ "$line" =~ ^"ERROR: "[0-9]+": "(Parser|Type-Check|Exception)": " ]]; then
      line=${line#ERROR: }
      error=${line#*: }
      errorline=${line%%: *}

      i=0
      for file in "${files[@]}"; do
        errorfile=$file
        numlines=${filenumlines[$((i++))]}
        if ((errorline <= numlines)); then
          break
        fi
        ((errorline -= numlines))
      done

      echo "ERROR: $errorfile:$errorline: $error"
    else
      echo "$line"
    fi
  done
else
  "${cmd[@]}"
fi
